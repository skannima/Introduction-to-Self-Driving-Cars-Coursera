{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this notebook, you will implement the kinematic bicycle model. The model accepts velocity and steering rate inputs and steps through the bicycle kinematic equations. Once the model is implemented, you will provide a set of inputs to drive the bicycle in a figure 8 trajectory.\n",
    "\n",
    "The bicycle kinematics are governed by the following set of equations:\n",
    "\n",
    "\\begin{align*}\n",
    "\\dot{x}_c &= v \\cos{(\\theta + \\beta)} \\\\\n",
    "\\dot{y}_c &= v \\sin{(\\theta + \\beta)} \\\\\n",
    "\\dot{\\theta} &= \\frac{v \\cos{\\beta} \\tan{\\delta}}{L} \\\\\n",
    "\\dot{\\delta} &= \\omega \\\\\n",
    "\\beta &= \\tan^{-1}(\\frac{l_r \\tan{\\delta}}{L})\n",
    "\\end{align*}\n",
    "\n",
    "where the inputs are the bicycle speed $v$ and steering angle rate $\\omega$. The input can also directly be the steering angle $\\delta$ rather than its rate in the simplified case. The Python model will allow us both implementations.\n",
    "\n",
    "In order to create this model, it's a good idea to make use of Python class objects. This allows us to store the state variables as well as make functions for implementing the bicycle kinematics. \n",
    "\n",
    "The bicycle begins with zero initial conditions, has a maximum turning rate of 1.22 rad/s, a wheelbase length of 2m, and a length of 1.2m to its center of mass from the rear axle.\n",
    "\n",
    "From these conditions, we initialize the Python class as follows:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from notebook_grader import BicycleSolution, grade_bicycle\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.image as mpimg\n",
    "\n",
    "class Bicycle():\n",
    "    def __init__(self):\n",
    "        self.xc = 0\n",
    "        self.yc = 0\n",
    "        self.theta = 0\n",
    "        self.delta = 0\n",
    "        self.beta = 0\n",
    "        \n",
    "        self.L = 2\n",
    "        self.lr = 1.2\n",
    "        self.w_max = 1.22\n",
    "        \n",
    "        self.sample_time = 0.01\n",
    "        \n",
    "    def reset(self):\n",
    "        self.xc = 0\n",
    "        self.yc = 0\n",
    "        self.theta = 0\n",
    "        self.delta = 0\n",
    "        self.beta = 0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A sample time is required for numerical integration when propagating the kinematics through time. This is set to 10 milliseconds. We also have a reset function which sets all the state variables back to 0. \n",
    "\n",
    "With this sample time, implement the kinematic model using the function $\\textit{step}$ defined in the next cell. The function should take speed + angular rate as inputs and update the state variables. Don't forget about the maximum turn rate on the bicycle!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Bicycle(Bicycle):\n",
    "    def step(self, v, w):\n",
    "        # ==================================\n",
    "        #  Implement kinematic model here\n",
    "        xc_dot    =  v * np.cos(self.theta + self.beta); \n",
    "        yc_dot    =  v * np.sin(self.theta + self.beta); \n",
    "        theta_dot =  v * np.cos(self.beta) * np.tan(self.delta) / self.L; \n",
    "        self.beta = np.arctan(self.lr * np.tan(self.delta) / self.L); \n",
    "        delta_dot = w; \n",
    "        \n",
    "        self.xc += xc_dot * self.sample_time;\n",
    "        self.yc += yc_dot * self.sample_time;\n",
    "        self.theta += theta_dot * self.sample_time;\n",
    "        self.delta += delta_dot * self.sample_time;\n",
    "        \n",
    "        # ==================================\n",
    "        pass\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With the model setup, we can now start giving bicycle inputs and producing trajectories. \n",
    "\n",
    "Suppose we want the model to travel a circle of radius 10 m in 20 seconds. Using the relationship between the radius of curvature and the steering angle, the desired steering angle can be computed.\n",
    "\n",
    "\\begin{align*}\n",
    "    \\tan{\\delta} &= \\frac{L}{r} \\\\\n",
    "    \\delta &= \\tan^{-1}(\\frac{L}{r}) \\\\\n",
    "           &= \\tan^{-1}(\\frac{2}{10}) \\\\\n",
    "           &= 0.1974\n",
    "\\end{align*}\n",
    "\n",
    "If the steering angle is directly set to 0.1974 using a simplied bicycled model, then the bicycle will travel in a circle without requiring any additional steering input. \n",
    "\n",
    "The desired speed can be computed from the circumference of the circle:\n",
    "\n",
    "\\begin{align*}\n",
    "    v &= \\frac{d}{t}\\\\\n",
    "     &= \\frac{2 \\pi 10}{20}\\\\\n",
    "     &= \\pi\n",
    "\\end{align*}\n",
    "\n",
    "We can now implement this in a loop to step through the model equations. We will also run our bicycle model solution along with your model to show you the expected trajectory. This will help you verify the correctness of your model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sample_time = 0.01\n",
    "time_end = 20\n",
    "model = Bicycle()\n",
    "solution_model = BicycleSolution()\n",
    "\n",
    "# set delta directly\n",
    "model.delta = np.arctan(2/10)\n",
    "solution_model.delta = np.arctan(2/10)\n",
    "\n",
    "t_data = np.arange(0,time_end,sample_time)\n",
    "x_data = np.zeros_like(t_data)\n",
    "y_data = np.zeros_like(t_data)\n",
    "x_solution = np.zeros_like(t_data)\n",
    "y_solution = np.zeros_like(t_data)\n",
    "\n",
    "for i in range(t_data.shape[0]):\n",
    "    x_data[i] = model.xc\n",
    "    y_data[i] = model.yc\n",
    "    model.step(np.pi, 0)\n",
    "    \n",
    "    x_solution[i] = solution_model.xc\n",
    "    y_solution[i] = solution_model.yc\n",
    "    solution_model.step(np.pi, 0)\n",
    "    \n",
    "    model.beta = 0\n",
    "    solution_model.beta=0\n",
    "    \n",
    "plt.axis('equal')\n",
    "plt.plot(x_data, y_data,label='Learner Model')\n",
    "plt.plot(x_solution, y_solution,label='Solution Model')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "The plot above shows the desired circle of 10m radius. The path is slightly offset which is caused by the sideslip effects due to $\\beta$. By forcing $\\beta = 0$ through uncommenting the last line in the loop, you can see that the offset disappears and the circle becomes centered at (0,10). \n",
    "\n",
    "However, in practice the steering angle cannot be directly set and must be changed through angular rate inputs $\\omega$. The cell below corrects for this and sets angular rate inputs to generate the same circle trajectory. The speed $v$ is still maintained at $\\pi$ m/s."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "0.0122\n",
      "0.0244\n",
      "0.0366\n",
      "0.0488\n",
      "0.061000000000000006\n",
      "0.0732\n",
      "0.0854\n",
      "0.0976\n",
      "0.10980000000000001\n",
      "0.12200000000000001\n",
      "0.1342\n",
      "0.1464\n",
      "0.1586\n",
      "0.17079999999999998\n",
      "0.18299999999999997\n",
      "0.19519999999999996\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n",
      "0.20739999999999995\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sample_time = 0.01\n",
    "time_end = 20\n",
    "model.reset()\n",
    "solution_model.reset()\n",
    "\n",
    "t_data = np.arange(0,time_end,sample_time)\n",
    "x_data = np.zeros_like(t_data)\n",
    "y_data = np.zeros_like(t_data)\n",
    "x_solution = np.zeros_like(t_data)\n",
    "y_solution = np.zeros_like(t_data)\n",
    "\n",
    "for i in range(t_data.shape[0]):\n",
    "    x_data[i] = model.xc\n",
    "    y_data[i] = model.yc\n",
    "    print(model.delta)\n",
    "    if model.delta < np.arctan(2/10):\n",
    "        model.step(np.pi, model.w_max)\n",
    "    else:\n",
    "        model.step(np.pi, 0)\n",
    "        \n",
    "    x_solution[i] = solution_model.xc\n",
    "    y_solution[i] = solution_model.yc\n",
    "    \n",
    "    if solution_model.delta < np.arctan(2/10):\n",
    "        solution_model.step(np.pi, model.w_max)\n",
    "    else:\n",
    "        solution_model.step(np.pi, 0)    \n",
    "\n",
    "plt.axis('equal')\n",
    "plt.plot(x_data, y_data,label='Learner Model')\n",
    "plt.plot(x_solution, y_solution,label='Solution Model')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here are some other example trajectories: a square path, a spiral path, and a wave path. Uncomment each section to view."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sample_time = 0.01\n",
    "time_end = 60\n",
    "model.reset()\n",
    "solution_model.reset()\n",
    "\n",
    "t_data = np.arange(0,time_end,sample_time)\n",
    "x_data = np.zeros_like(t_data)\n",
    "y_data = np.zeros_like(t_data)\n",
    "x_solution = np.zeros_like(t_data)\n",
    "y_solution = np.zeros_like(t_data)\n",
    "\n",
    "# maintain velocity at 4 m/s\n",
    "v_data = np.zeros_like(t_data)\n",
    "v_data[:] = 4 \n",
    "\n",
    "w_data = np.zeros_like(t_data)\n",
    "\n",
    "# ==================================\n",
    "#  Square Path: set w at corners only\n",
    "# ==================================\n",
    "\n",
    "w_data[670:670+100] = model.w_max\n",
    "w_data[670+100:670+100*2] = -0.753\n",
    "#w_data[2210:2210+100] = 0.753\n",
    "# w_data[2210+100:2210+100*2] = -0.753\n",
    "# w_data[3670:3670+100] = 0.753\n",
    "# w_data[3670+100:3670+100*2] = -0.753\n",
    "# w_data[5220:5220+100] = 0.753\n",
    "# w_data[5220+100:5220+100*2] = -0.753\n",
    "\n",
    "\n",
    "# ==================================\n",
    "#  Spiral Path: high positive w, then small negative w\n",
    "# ==================================\n",
    "# w_data[:] = -1/100\n",
    "# w_data[0:100] = 1\n",
    "\n",
    "# ==================================\n",
    "#  Wave Path: square wave w input\n",
    "# ==================================\n",
    "# w_data[:] = 0\n",
    "# w_data[0:100] = 1\n",
    "# w_data[100:300] = -1\n",
    "# w_data[300:500] = 1\n",
    "# w_data[500:5700] = np.tile(w_data[100:500], 13)\n",
    "# w_data[5700:] = -1\n",
    "\n",
    "\n",
    "# ==================================\n",
    "#  Wave Path: circular loops - > \n",
    "# ==================================\n",
    "dist = 0;\n",
    "w_data[:] = model.w_max\n",
    "\n",
    "#w_data[670:670+100] = 0.753\n",
    "#w_data[670+100:670+100*2] = -0.753\n",
    "#w_data[2210:2210+100] = 0.753\n",
    "# w_data[2210+100:2210+100*2] = -0.753\n",
    "# w_data[3670:3670+100] = 0.753\n",
    "# w_data[3670+100:3670+100*2] = -0.753\n",
    "# w_data[5220:5220+100] = 0.753\n",
    "# w_data[5220+100:5220+100*2] = -0.753\n",
    "\n",
    "# ==================================\n",
    "#  Step through bicycle model\n",
    "# ==================================\n",
    "for i in range(t_data.shape[0]):\n",
    "    x_data[i] = model.xc\n",
    "    y_data[i] = model.yc\n",
    "    model.step(v_data[i], w_data[i])\n",
    "    \n",
    "    x_solution[i] = solution_model.xc\n",
    "    y_solution[i] = solution_model.yc\n",
    "    solution_model.step(v_data[i], w_data[i])\n",
    "    #dist += v_data[i] * sample_time\n",
    "    \n",
    "plt.axis('equal')\n",
    "plt.plot(x_data, y_data,label='Learner Model')\n",
    "plt.plot(x_solution, y_solution,label='Solution Model')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We would now like the bicycle to travel a figure eight trajectory. Both circles in the figure eight have a radius of 8m and the path should complete in 30 seconds. The path begins at the bottom of the left circle and is shown in the figure below:\n",
    "\n",
    "![title](figure8.png)\n",
    "\n",
    "Determine the speed and steering rate inputs required to produce such trajectory and implement in the cell below. Make sure to also save your inputs into the arrays v_data and w_data, these will be used to grade your solution. The cell below also plots the trajectory generated by your own model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0. 0. 0. ... 0. 0. 0.]\n",
      "100.53096491487338\n",
      "12.566370614359172\n",
      "0.033510321638291124\n",
      "0.06702064327658225\n",
      "0.10053096491487337\n",
      "0.1340412865531645\n",
      "0.16755160819145562\n",
      "0.20106192982974674\n",
      "0.23457225146803787\n",
      "0.268082573106329\n",
      "0.30159289474462014\n",
      "0.3351032163829113\n",
      "0.36861353802120245\n",
      "0.4021238596594936\n",
      "0.43563418129778475\n",
      "0.4691445029360759\n",
      "0.502654824574367\n",
      "0.5361651462126582\n",
      "0.5696754678509494\n",
      "0.6031857894892405\n",
      "0.6366961111275317\n",
      "0.6702064327658228\n",
      "0.703716754404114\n",
      "0.7372270760424051\n",
      "0.7707373976806963\n",
      "0.8042477193189874\n",
      "0.8377580409572786\n",
      "0.8712683625955697\n",
      "0.9047786842338609\n",
      "0.938289005872152\n",
      "0.9717993275104432\n",
      "1.0053096491487343\n",
      "1.0388199707870254\n",
      "1.0723302924253164\n",
      "1.1058406140636075\n",
      "1.1393509357018985\n",
      "1.1728612573401895\n",
      "1.2063715789784806\n",
      "1.2398819006167716\n",
      "1.2733922222550627\n",
      "1.3069025438933537\n",
      "1.3404128655316447\n",
      "1.3739231871699358\n",
      "1.4074335088082268\n",
      "1.4409438304465179\n",
      "1.474454152084809\n",
      "1.5079644737231\n",
      "1.541474795361391\n",
      "1.574985116999682\n",
      "1.608495438637973\n",
      "1.642005760276264\n",
      "1.6755160819145551\n",
      "1.7090264035528462\n",
      "1.7425367251911372\n",
      "1.7760470468294283\n",
      "1.8095573684677193\n",
      "1.8430676901060103\n",
      "1.8765780117443014\n",
      "1.9100883333825924\n",
      "1.9435986550208835\n",
      "1.9771089766591745\n",
      "2.0106192982974656\n",
      "2.044129619935757\n",
      "2.077639941574048\n",
      "2.1111502632123393\n",
      "2.1446605848506306\n",
      "2.178170906488922\n",
      "2.211681228127213\n",
      "2.2451915497655044\n",
      "2.2787018714037957\n",
      "2.312212193042087\n",
      "2.345722514680378\n",
      "2.3792328363186694\n",
      "2.4127431579569607\n",
      "2.446253479595252\n",
      "2.4797638012335432\n",
      "2.5132741228718345\n",
      "2.5467844445101258\n",
      "2.580294766148417\n",
      "2.6138050877867083\n",
      "2.6473154094249995\n",
      "2.680825731063291\n",
      "2.714336052701582\n",
      "2.7478463743398733\n",
      "2.7813566959781646\n",
      "2.814867017616456\n",
      "2.848377339254747\n",
      "2.8818876608930384\n",
      "2.9153979825313296\n",
      "2.948908304169621\n",
      "2.982418625807912\n",
      "3.0159289474462034\n",
      "3.0494392690844947\n",
      "3.082949590722786\n",
      "3.1164599123610772\n",
      "3.1499702339993685\n",
      "3.1834805556376597\n",
      "3.216990877275951\n",
      "3.2505011989142423\n",
      "3.2840115205525335\n",
      "3.317521842190825\n",
      "3.351032163829116\n",
      "3.3845424854674073\n",
      "3.4180528071056986\n",
      "3.45156312874399\n",
      "3.485073450382281\n",
      "3.5185837720205724\n",
      "3.5520940936588636\n",
      "3.585604415297155\n",
      "3.619114736935446\n",
      "3.6526250585737374\n",
      "3.6861353802120287\n",
      "3.71964570185032\n",
      "3.753156023488611\n",
      "3.7866663451269025\n",
      "3.8201766667651937\n",
      "3.853686988403485\n",
      "3.8871973100417763\n",
      "3.9207076316800675\n",
      "3.954217953318359\n",
      "3.98772827495665\n",
      "4.021238596594941\n",
      "4.054748918233232\n",
      "4.0882592398715225\n",
      "4.121769561509813\n",
      "4.155279883148104\n",
      "4.188790204786395\n",
      "4.222300526424686\n",
      "4.255810848062977\n",
      "4.289321169701267\n",
      "4.322831491339558\n",
      "4.356341812977849\n",
      "4.38985213461614\n",
      "4.423362456254431\n",
      "4.4568727778927215\n",
      "4.490383099531012\n",
      "4.523893421169303\n",
      "4.557403742807594\n",
      "4.590914064445885\n",
      "4.624424386084176\n",
      "4.657934707722466\n",
      "4.691445029360757\n",
      "4.724955350999048\n",
      "4.758465672637339\n",
      "4.79197599427563\n",
      "4.8254863159139205\n",
      "4.858996637552211\n",
      "4.892506959190502\n",
      "4.926017280828793\n",
      "4.959527602467084\n",
      "4.993037924105375\n",
      "5.026548245743665\n",
      "5.060058567381956\n",
      "5.093568889020247\n",
      "5.127079210658538\n",
      "5.160589532296829\n",
      "5.1940998539351195\n",
      "5.22761017557341\n",
      "5.261120497211701\n",
      "5.294630818849992\n",
      "5.328141140488283\n",
      "5.361651462126574\n",
      "5.395161783764864\n",
      "5.428672105403155\n",
      "5.462182427041446\n",
      "5.495692748679737\n",
      "5.529203070318028\n",
      "5.5627133919563185\n",
      "5.596223713594609\n",
      "5.6297340352329\n",
      "5.663244356871191\n",
      "5.696754678509482\n",
      "5.730265000147773\n",
      "5.763775321786063\n",
      "5.797285643424354\n",
      "5.830795965062645\n",
      "5.864306286700936\n",
      "5.897816608339227\n",
      "5.9313269299775175\n",
      "5.964837251615808\n",
      "5.998347573254099\n",
      "6.03185789489239\n",
      "6.065368216530681\n",
      "6.098878538168972\n",
      "6.1323888598072624\n",
      "6.165899181445553\n",
      "6.199409503083844\n",
      "6.232919824722135\n",
      "6.266430146360426\n",
      "6.2999404679987165\n",
      "6.333450789637007\n",
      "6.366961111275298\n",
      "6.400471432913589\n",
      "6.43398175455188\n",
      "6.467492076190171\n",
      "6.5010023978284615\n",
      "6.534512719466752\n",
      "6.568023041105043\n",
      "6.601533362743334\n",
      "6.635043684381625\n",
      "6.6685540060199155\n",
      "6.702064327658206\n",
      "6.735574649296497\n",
      "6.769084970934788\n",
      "6.802595292573079\n",
      "6.83610561421137\n",
      "6.8696159358496605\n",
      "6.903126257487951\n",
      "6.936636579126242\n",
      "6.970146900764533\n",
      "7.003657222402824\n",
      "7.0371675440411146\n",
      "7.070677865679405\n",
      "7.104188187317696\n",
      "7.137698508955987\n",
      "7.171208830594278\n",
      "7.204719152232569\n",
      "7.2382294738708595\n",
      "7.27173979550915\n",
      "7.305250117147441\n",
      "7.338760438785732\n",
      "7.372270760424023\n",
      "7.405781082062314\n",
      "7.439291403700604\n",
      "7.472801725338895\n",
      "7.506312046977186\n",
      "7.539822368615477\n",
      "7.573332690253768\n",
      "7.6068430118920585\n",
      "7.640353333530349\n",
      "7.67386365516864\n",
      "7.707373976806931\n",
      "7.740884298445222\n",
      "7.774394620083513\n",
      "7.807904941721803\n",
      "7.841415263360094\n",
      "7.874925584998385\n",
      "7.908435906636676\n",
      "7.941946228274967\n",
      "7.9754565499132575\n",
      "8.008966871551548\n",
      "8.04247719318984\n",
      "8.07598751482813\n",
      "8.10949783646642\n",
      "8.143008158104712\n",
      "8.176518479743002\n",
      "8.210028801381293\n",
      "8.243539123019584\n",
      "8.277049444657875\n",
      "8.310559766296166\n",
      "8.344070087934456\n",
      "8.377580409572747\n",
      "8.411090731211038\n",
      "8.444601052849329\n",
      "8.47811137448762\n",
      "8.51162169612591\n",
      "8.545132017764201\n",
      "8.578642339402492\n",
      "8.612152661040783\n",
      "8.645662982679074\n",
      "8.679173304317365\n",
      "8.712683625955655\n",
      "8.746193947593946\n",
      "8.779704269232237\n",
      "8.813214590870528\n",
      "8.846724912508819\n",
      "8.88023523414711\n",
      "8.9137455557854\n",
      "8.947255877423691\n",
      "8.980766199061982\n",
      "9.014276520700273\n",
      "9.047786842338564\n",
      "9.081297163976854\n",
      "9.114807485615145\n",
      "9.148317807253436\n",
      "9.181828128891727\n",
      "9.215338450530018\n",
      "9.248848772168309\n",
      "9.2823590938066\n",
      "9.31586941544489\n",
      "9.349379737083181\n",
      "9.382890058721472\n",
      "9.416400380359763\n",
      "9.449910701998053\n",
      "9.483421023636344\n",
      "9.516931345274635\n",
      "9.550441666912926\n",
      "9.583951988551217\n",
      "9.617462310189508\n",
      "9.650972631827798\n",
      "9.68448295346609\n",
      "9.71799327510438\n",
      "9.75150359674267\n",
      "9.785013918380962\n",
      "9.818524240019253\n",
      "9.852034561657543\n",
      "9.885544883295834\n",
      "9.919055204934125\n",
      "9.952565526572416\n",
      "9.986075848210707\n",
      "10.019586169848997\n",
      "10.053096491487288\n",
      "10.086606813125579\n",
      "10.12011713476387\n",
      "10.15362745640216\n",
      "10.187137778040452\n",
      "10.220648099678742\n",
      "10.254158421317033\n",
      "10.287668742955324\n",
      "10.321179064593615\n",
      "10.354689386231906\n",
      "10.388199707870196\n",
      "10.421710029508487\n",
      "10.455220351146778\n",
      "10.488730672785069\n",
      "10.52224099442336\n",
      "10.55575131606165\n",
      "10.589261637699941\n",
      "10.622771959338232\n",
      "10.656282280976523\n",
      "10.689792602614814\n",
      "10.723302924253105\n",
      "10.756813245891395\n",
      "10.790323567529686\n",
      "10.823833889167977\n",
      "10.857344210806268\n",
      "10.890854532444559\n",
      "10.92436485408285\n",
      "10.95787517572114\n",
      "10.991385497359431\n",
      "11.024895818997722\n",
      "11.058406140636013\n",
      "11.091916462274304\n",
      "11.125426783912594\n",
      "11.158937105550885\n",
      "11.192447427189176\n",
      "11.225957748827467\n",
      "11.259468070465758\n",
      "11.292978392104049\n",
      "11.32648871374234\n",
      "11.35999903538063\n",
      "11.393509357018921\n",
      "11.427019678657212\n",
      "11.460530000295503\n",
      "11.494040321933793\n",
      "11.527550643572084\n",
      "11.561060965210375\n",
      "11.594571286848666\n",
      "99.55916558735933\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sample_time = 0.01\n",
    "\n",
    "model.reset()\n",
    "\n",
    "total_distance = 2 * (2*np.pi*8);\n",
    "time_end = 30 ; \n",
    "\n",
    "L = 1; \n",
    "\n",
    "t_data = np.arange(0,time_end,sample_time)\n",
    "x_data = np.zeros_like(t_data)\n",
    "y_data = np.zeros_like(t_data)\n",
    "v_data = np.zeros_like(t_data)\n",
    "w_data = np.zeros_like(t_data)\n",
    "\n",
    "# ==================================\n",
    "#  Learner solution begins here\n",
    "# ==================================\n",
    "\n",
    "v_data = np.zeros_like(t_data)\n",
    "v_data[:] =  total_distance/time_end; \n",
    "\n",
    "traj_dist_arc1 = 0; \n",
    "traj_dist_arc1 = total_distance / 8; \n",
    "#print(total_distance)\n",
    "#print(traj_dist_arc1)\n",
    "\n",
    "distance_travelled = 0;\n",
    "\n",
    "# for i in range(t_data.shape[0]):\n",
    "#     x_data[i] = model.xc\n",
    "#     y_data[i] = model.yc\n",
    "    \n",
    "#     if model.delta < np.arctan(2/10):\n",
    "#         model.step(np.pi, model.w_max)\n",
    "#     else:\n",
    "#         model.step(np.pi, 0)\n",
    "        \n",
    "        \n",
    "for i in range(t_data.shape[0]):\n",
    "    #print(t_data[i]);\n",
    "    x_data[i] = model.xc\n",
    "    y_data[i] = model.yc\n",
    "    #grade_bicycle(t_data,v_data,w_data)\n",
    "    if (distance_travelled <= (traj_dist_arc1-L)):\n",
    "            w_data[i] = model.w_max;\n",
    "            distance_travelled += v_data[i] * sample_time;\n",
    "            if model.delta < np.arctan(2/8):\n",
    "                    model.step(v_data[i], w_data[i])\n",
    "            else:\n",
    "                model.step(v_data[i], 0)\n",
    "            #print(traj_dist_arc1)\n",
    "            print(distance_travelled)\n",
    "                \n",
    "    elif (((traj_dist_arc1-L) < distance_travelled <= ((5*traj_dist_arc1)-2.7))):\n",
    "            w_data[i] = -1*model.w_max\n",
    "            distance_travelled += v_data[i] * sample_time;\n",
    "            if ((-1)*np.arctan(2/8)) < model.delta: \n",
    "                model.step(v_data[i], w_data[i]);\n",
    "                #print(distance_travelled)\n",
    "            else:\n",
    "                model.step(v_data[i], 0)\n",
    "    elif ((((5*traj_dist_arc1)-2.7) < distance_travelled < ((8*traj_dist_arc1)-L))):\n",
    "            w_data[i] = model.w_max\n",
    "            distance_travelled += v_data[i] * sample_time;\n",
    "            if model.delta < np.arctan(2/8):\n",
    "                model.step(v_data[i], w_data[i])\n",
    "            else:\n",
    "                model.step(v_data[i], 0)\n",
    "    \n",
    "    \n",
    "    #print(t_data[i], v_data[i],w_data[i]);\n",
    "        #print(distance_travelled)\n",
    "        \n",
    "#     if (distance_travelled < (8*traj_dist_arc1)):\n",
    "#             distance_travelled += v_data[i] * sample_time;\n",
    "#             #print(model.delta)\n",
    "#             if model.delta < np.arctan(2/10):\n",
    "#                 model.step(v_data[i], w_data[i])\n",
    "#             else:\n",
    "#                 model.step(v_data[i], 0)\n",
    "#          #print(v_data[i])\n",
    "            \n",
    "#     x_solution[i] = solution_model.xc\n",
    "#     y_solution[i] = solution_model.yc\n",
    "#     solution_model.step(v_data[i], w_data[i])\n",
    "    \n",
    "# ==================================\n",
    "#  Learner solution ends here\n",
    "# ==================================\n",
    "plt.axis('equal')\n",
    "plt.plot(x_data, y_data)\n",
    "#plt.plot(t_data, v_data)\n",
    "#plt.plot(t_data, w_data)\n",
    "\n",
    "\n",
    "print(distance_travelled)\n",
    "#plt.plot(x_solution, y_solution,label='Solution Model')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will now run your speed and angular rate inputs through our bicycle model solution. This is to ensure that your trajectory is correct along with your model. The cell below will display the path generated by our model along with some waypoints on a desired figure 8. Surrounding these waypoints are error tolerance circles with radius 1.5m, your solution will pass the grader if the trajectory generated stays within 80% of these circles."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Assessment failed, your trajectory deviates too much or your model is incorrect.\n",
      "Only 30.0% of the waypoints were met, 80% needed to pass.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "grade_bicycle(t_data,v_data,w_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "The cell below will save the time and vehicle inputs as text file named $\\textit{figure8.txt}$. To locate the file, change the end of your web directory to $\\textit{/notebooks/Course_1_Module_4/figure8.txt}$\n",
    "\n",
    "Once you are there, you can download the file and submit to the Coursera grader to complete this assessment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = np.vstack([t_data, v_data, w_data]).T\n",
    "np.savetxt('figure8.txt', data, delimiter=', ')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Congratulations! You have now completed the assessment! Feel free to test the bicycle model with different inputs in the cell below, and see what trajectories they form. For example, try moving in an equilateral triangle. You'll find that it's rather difficult to generate desired trajectories by pre-setting the inputs. The next module on vehicle control will show you an easier and more accurate method. See you there!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sample_time = 0.01\n",
    "time_end = 30\n",
    "model.reset()\n",
    "\n",
    "t_data = np.arange(0,time_end,sample_time)\n",
    "x_data = np.zeros_like(t_data)\n",
    "y_data = np.zeros_like(t_data)\n",
    "v_data = np.zeros_like(t_data)\n",
    "w_data = np.zeros_like(t_data)\n",
    "\n",
    "# ==================================\n",
    "#  Test various inputs here\n",
    "# ==================================\n",
    "for i in range(t_data.shape[0]):\n",
    "\n",
    "    model.step(v_data[i], w_data[i])\n",
    "    \n",
    "plt.axis('equal')\n",
    "plt.plot(x_data, y_data)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
